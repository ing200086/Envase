<?php

namespace Ing200086\GraphCore\Tests\Unit\Vertex;

use Ing200086\GraphCore\Exception\InvalidArgumentException;
use Ing200086\GraphCore\Tests\Unit\TestCase;
use Ing200086\GraphCore\Vertex\Unregistered;

/**
 * Class UnregisteredTest
 *
 * @package Ing200086\GraphCore\Tests\Unit\Vertex
 *
 */
class UnregisteredTest extends TestCase {
    protected $vertex;

    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->vertex = new Unregistered(1);
    }

    /** @test */
    public function it_has_an_Id()
    {
        $this->assertEquals(1, $this->vertex->getId());
    }

    /** @test
     * @expectedException InvalidArgumentException
     */
    public function it_throws_error_for_invalid_ids()
    {
        $vertex = new Unregistered([]);
    }

    /** @test*/
    public function it_can_evaluate_equalness_to_another_vertex() {
        $subject = new Unregistered(1);
        $this->assertTrue($this->vertex->isEqualTo($subject));
    }

    /** @test*/
    public function it_can_evaluate_unequalness_to_another_vertex() {
        $subject = new Unregistered(2);
        $this->assertFalse($this->vertex->isEqualTo($subject));
    }

    /** @test*/
    public function it_can_evaluate_sameness_to_vertex() {
        $subject = new Unregistered(1);
        $this->assertTrue($this->vertex->isSameTo($this->vertex));
        $this->assertFalse($this->vertex->isSameTo($subject));
    }
}
