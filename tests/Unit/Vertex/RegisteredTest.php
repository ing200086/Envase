<?php
namespace Ing200086\GraphCore\Tests\Unit\Vertex;

use Ing200086\GraphCore\Exception\InvalidArgumentException;
use Ing200086\GraphCore\Tests\Unit\TestCase;
use Ing200086\GraphCore\Vertex\Registered;
use Ing200086\GraphCore\Graph\GraphInterface;
use Ing200086\GraphCore\Vertex\Unregistered;
use Mockery;

/**
 * Class RegisteredTest
 *
 * @package Ing200086\GraphCore\Tests\Unit\Vertex
 */
class RegisteredTest extends TestCase {
    protected $graph;
    protected $vertex;

    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->graph = Mockery::mock(GraphInterface::class);
        $this->graph->expects('registerVertex')->once();

        $this->vertex = new Registered(1, $this->graph);
    }

    /** @test*/
    public function it_has_same_graph_as_what_it_is_constructed_with() {
        $this->assertSame($this->graph, $this->vertex->graph());
    }

    /** @test*/
    public function it_can_evaluate_equalness_to_another_vertex() {
        $this->assertTrue($this->vertex->isEqualTo($this->vertex));
    }

    /** @test
     * @expectedException InvalidArgumentException
     */
    public function it_cannot_evaluate_equalness_to_an_unregistered_vertex() {
        $subject = new Unregistered(1);
        $this->assertTrue($this->vertex->isEqualTo($subject));
    }
}
