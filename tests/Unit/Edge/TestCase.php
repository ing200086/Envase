<?php


namespace Ing200086\GraphCore\Tests\Unit\Edge;
use Ing200086\GraphCore\Graph\GraphInterface;
use Ing200086\GraphCore\Vertex\RegisteredInterface;
use Mockery;


abstract class TestCase extends \Ing200086\GraphCore\Tests\Unit\TestCase {
    protected $graph;
    protected $source;
    protected $destination;
    protected $edge;

    protected abstract function generateArticle();

    protected function mockVertex(&$graph, int $id = 0)
    {
        $vertex = Mockery::mock(RegisteredInterface::class);

        $vertex->shouldReceive('graph')->andReturn($graph);
        $vertex->shouldReceive('getId')->andReturn($id);

        return $vertex;
    }


    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->graph = Mockery::mock(GraphInterface::class);
        $this->graph->shouldReceive('registerEdge');

        $this->source = $this->mockVertex($this->graph, 0);
        $this->destination = $this->mockVertex($this->graph, 1);

        $this->graph->shouldReceive('isCompatibleWith')->andReturn(true);

        $this->edge = $this->generateArticle();
    }
}