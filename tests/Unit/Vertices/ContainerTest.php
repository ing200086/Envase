<?php

namespace Ing200086\GraphCore\Tests\Unit\Vertices;

use Ing200086\GraphCore\Vertices\Container;

/**
 * Class ContainerTest
 *
 * @package Ing200086\GraphCore\Tests\Unit\Vertices
 *
 */
class ContainerTest extends TestCase {
    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->_container = Container::Create();

        foreach ( $this->_vertices as $vertex )
        {
            $this->_container->add($vertex);
        }
    }

    /** @test */
    public function it_can_be_created_empty()
    {
        $this->_container = Container::Create();
        $this->assertEquals(0, $this->_container->size());
    }

    /** @test */
    public function it_can_be_populated_with_items()
    {
        $id = $this->_vertex->getId();
        $this->assertTrue($this->_container->has($id), 'Container did not find vertex with $id');
        $this->assertEquals($this->_vertex, $this->_container->get($id), 'Container did not return equal vertex');
        $this->assertSame($this->_vertex, $this->_container->get($id), 'Container did not return same vertex');
    }

    /** @test */
    public function it_can_return_a_subset_collection()
    {
        $this->assertEquals(10, $this->_container->size());

        $closure = function ($vertex) {
            return ($vertex->getValue() % 2 == 0);
        };

        $result = $this->_container->getThatMatches($closure);
        $this->assertEquals(5, $result->size());
        $this->assertInstanceOf(Container::class, $result);
    }
}
