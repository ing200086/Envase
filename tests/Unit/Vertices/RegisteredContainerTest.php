<?php

namespace Ing200086\GraphCore\Tests\Unit\Vertices;

use Ing200086\GraphCore\Vertices\RegisteredContainer;
use Ing200086\GraphCore\Graph\GraphInterface;
use Mockery;

/**
 * Class RegisteredContainerTest
 * Thinking about this class. It makes more sense to keep the aggregate at the graph level.
 *
 * @package Ing200086\GraphCore\Tests\Unit\Vertices
 * @group   markForRemoval
 *
 */
class RegisteredContainerTest extends TestCase {
    protected $_graph;

    protected function setUp()
    {
        $this->markTestIncomplete('Thinking about this class. It makes more sense to keep the aggregate at the graph level.');
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->_graph = $this->stubGraph();
        $this->_container = RegisteredContainer::Create($this->_graph);

        foreach ( $this->_vertices as $vertex )
        {
            $this->_container->add($vertex);
        }
    }

    protected function stubGraph()
    {
        return Mockery::mock(GraphInterface::class);
    }

    /** @test*/
    public function it_can_be_created_empty() {
        $this->assertInstanceOf(RegisteredContainer::class, $this->_container);
    }

    /** @test*/
    public function it_can_return_the_registered_graph() {
        $this->assertEquals($this->_graph, $this->_container->graph());
    }
}
