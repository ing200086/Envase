<?php

namespace Ing200086\GraphCore\Tests\Unit\Container\Generic;

use Mockery;
use Psr\Container\ContainerInterface;

class TestCase extends \PHPUnit\Framework\TestCase {
    protected $_container;
    protected $_stub;
    protected $_stubId;
    protected $_stubs;
    protected $_count = 2;

    /** @test */
    public function it_is_psr_interface()
    {
        $this->assertInstanceOf(ContainerInterface::class, $this->_container);
    }

    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->_stubs = $this->mockStubArray($this->_count);
        $this->_stubId = '1';
        $this->_stub = $this->_stubs[$this->_stubId];
    }

    protected function mockStub($id)
    {
        return $id;
    }

    protected function mockStubArray($count = 1)
    {
        $output = [];

        $output[strval(1)] = $this->mockStub(0);
        for ( $i = 1; $i < $count; $i++ )
        {
            $key = $i + 1;
            $output[strval($key)] = $this->mockStub($i);
        }

        return $output;
    }

    protected function tearDown()
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
        Mockery::close();
    }
}