<?php

namespace Ing200086\GraphCore\Tests\Unit\Container\Generic;

use Ing200086\GraphCore\Container\Generic\ClosedContainer;
use Ing200086\GraphCore\Container\Generic\InterfaceClosedContainer;

/**
 * Class StubClosedContainerTest
 *
 * @package Ing200086\GraphCore\Tests\Unit\Generic\Container
 */
class ClosedContainerTest extends TestCase {
    protected function setUp()
    {
        $this->_count = 10;
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->_container = ClosedContainer::FromArray($this->_stubs);
    }

    /** @test*/
    public function it_can_evaluate_for_matches_on_item_based_on_closure() {
        $matcher = function ($item) {
            return (intval($item) % 2) == 0;
        };

        $this->assertTrue($this->_container->hasThatMatches($matcher));
    }

    /** @test*/
    public function it_can_evaluate_for_matches_on_item_based_on_closure_that_does_not_exist() {
        $matcher = function ($item) {
            return (intval($item) > 20);
        };

        $this->assertFalse($this->_container->hasThatMatches($matcher));
    }

    /** @test */
    public function it_can_return_a_subset_of_item_in_collection() {
        $matcher = function ($item) {
            return (intval($item) % 2) == 0;
        };

        $subContainer = $this->_container->getThatMatches($matcher);

        $this->assertInstanceOf(InterfaceClosedContainer::class, $subContainer);
        $this->assertEquals(5, $subContainer->size());
    }
}
